/**
 * @fileOverview Khepri keyword lexers.
 */
package (
    reservedWordList
    
    reservedWord)
with
    import 'bennu::parse' {
        label},
    import 'bennu::text' {
        trie}
in {

var keywordList := [
    'break', 'case', 'catch', 'continue', 'debugger', 'default', 'delete', 
    'do', 'else', 'finally', 'for', 'function', 'if', 'in', 'instanceof', 
    'typeof', 'new', 'var', 'return', 'void', 'switch', 'while', 'this', 
    'with', 'throw', 'try',
    
    'export', 'package',
    'class', 'enum', 'interface',
    'extends', 'implements',
    'private', 'public', 'protected',
    'super', 
    'const',
    'yield',
    
    'import', 'let', 'static',
    '_']; 

reservedWordList := keywordList.concat('null', 'true', 'false');

/*Lexers
 ******************************************************************************/
reservedWord := label@'ReservedWordLexer' <|
   trie reservedWordList;

}