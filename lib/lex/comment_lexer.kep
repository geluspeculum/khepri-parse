/**
 * @fileOverview Khepri comment lexers.
 */
package (
    singleLineCommentMarker
    singleLineCommentChar
    singleLineCommentChars
    singleLineComment
    
    multiLineCommentStartMarker
    multiLineCommentEndMarker
    multiLineCommentChars
    multiLineComment
   
    comment)
with
    import 'bennu::parse' {
        anyToken
        either
        many
        next
        not
        label},
    import 'bennu::text' {
        string},
    import 'bennu::lang' {
        between},
    
    import './common' {join},
    import './line_terminator_lexer' {lineTerminator}
in {

/* Single Line Comment
 ******************************************************************************/
singleLineCommentMarker := string '//';

singleLineCommentChar := next(not lineTerminator, anyToken);

singleLineCommentChars := many singleLineCommentChar;

/**
 * Single line comment.
 * 
 * Returns the contents of the comment.
 */
singleLineComment := label@'Single Line Comment Lexer' <|
    next(
        singleLineCommentMarker,
        join singleLineCommentChars);

/* Multi Line Comment
 ******************************************************************************/
multiLineCommentStartMarker := string '/*';

multiLineCommentEndMarker := string '*/';

multiLineCommentChars := label@'Multi Line Comment Characters Lexer' <|
    many next(
        not multiLineCommentEndMarker,
        anyToken);

/**
 * Multi line comment.
 * 
 * Returns the contents of the comment.
 */
multiLineComment := label@'Multi Line Comment Lexer' <|
    between(multiLineCommentStartMarker, multiLineCommentEndMarker,
        join multiLineCommentChars);

/* Comment
 ******************************************************************************/
comment := label@'Comment Lexer' <|
    either(
        singleLineComment,
        multiLineComment);

}