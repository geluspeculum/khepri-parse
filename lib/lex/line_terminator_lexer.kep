/**
 * @fileOverview Khepri line terminators lexers.
 */
package (
    lf
    cr
    ls
    ps
    lineTerminator
    lineTerminatorSequence)
with
    import 'bennu::parse' {always choice next optional label token},
    import 'bennu::text' {character oneOf}
in {

var lfChar = '\u000A',
    crChar = '\u000D',
    lsChar = '\u2028',
    psChar = '\u2029';

/* Lexers
 ******************************************************************************/
/**
 * Line Feed
 */
lf = label('Line Feed Lexer',
    character lfChar);

/**
 * Carriage Return
 */
cr = label('Carriage Return Lexer',
    character crChar);

/**
 * Line Separator
 */
ls = label('Line Separator Lexer',
    character lsChar);

/**
 * Paragraph Separator
 */
ps = label('Paragraph Separator Lexer',
    character psChar);

/**
 * A line terminator character.
 */
lineTerminator = label('Line Terminator Lexer',
    oneOf [lfChar, crChar, lsChar, psChar]);

/**
 * A sequence of characters denoting a linter terminator.
 * 
 * crlf sequences are returned as a single token.
 */
lineTerminatorSequence = label@'Line Terminator Sequence Lexer' <|
    choice(
        lf,
        ls,
        ps,
        next(
            cr,
            optional(crChar,
                next(lf,
                    always(crChar + lfChar)))));

}